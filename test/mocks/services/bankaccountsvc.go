// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/adrianoccosta/exercise-qonto/internal/services/bankaccountsvc (interfaces: BankAccountService)

// Package mockservice is a generated GoMock package.
package mockservice

import (
	reflect "reflect"

	domain "github.com/adrianoccosta/exercise-qonto/internal/domain"
	gomock "github.com/golang/mock/gomock"
)

// MockBankAccountService is a mock of BankAccountService interface.
type MockBankAccountService struct {
	ctrl     *gomock.Controller
	recorder *MockBankAccountServiceMockRecorder
}

// MockBankAccountServiceMockRecorder is the mock recorder for MockBankAccountService.
type MockBankAccountServiceMockRecorder struct {
	mock *MockBankAccountService
}

// NewMockBankAccountService creates a new mock instance.
func NewMockBankAccountService(ctrl *gomock.Controller) *MockBankAccountService {
	mock := &MockBankAccountService{ctrl: ctrl}
	mock.recorder = &MockBankAccountServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBankAccountService) EXPECT() *MockBankAccountServiceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockBankAccountService) Create(arg0 domain.BankAccount) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockBankAccountServiceMockRecorder) Create(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockBankAccountService)(nil).Create), arg0)
}

// Delete mocks base method.
func (m *MockBankAccountService) Delete(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockBankAccountServiceMockRecorder) Delete(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockBankAccountService)(nil).Delete), arg0)
}

// Read mocks base method.
func (m *MockBankAccountService) Read(arg0 string) (domain.BankAccount, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Read", arg0)
	ret0, _ := ret[0].(domain.BankAccount)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Read indicates an expected call of Read.
func (mr *MockBankAccountServiceMockRecorder) Read(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Read", reflect.TypeOf((*MockBankAccountService)(nil).Read), arg0)
}

// Update mocks base method.
func (m *MockBankAccountService) Update(arg0 domain.BankAccount) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockBankAccountServiceMockRecorder) Update(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockBankAccountService)(nil).Update), arg0)
}
